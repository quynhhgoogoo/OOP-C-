#include "ass52.h"

#include <iostream>

#include <cstring>

#include <cstdlib>

#include <new>

 

using namespace std;

 

//FOR HOTEL

Hotel::Hotel(){};

Hotel::~Hotel(){};

Hotel::Hotel(char *name, char *address, unsigned stars_no, unsigned rooms_no){

                             strcpy(this->name, name);

                             strcpy(this->address, address);

                             this->stars_no = stars_no;

                             this->rooms_no = rooms_no;

}

 

void Hotel::print_info(){

                             cout << "Hotel name: " << this->name << endl;

                             cout << "address: " << this->address << endl;

                             cout << "number of stars: " << this->stars_no << endl;

                             cout << "number of rooms: " << this->rooms_no << endl;

}

 

//FOR ROOMS

Room::Room(){};

Room::~Room(){};

 

Room::Room(unsigned room_no, double area, char *type, double price){

                             this->room_no = room_no;

                             this->area = area;

                             strcpy(this->type, type);

                             this->price = price;

}

 

void Room::print_info(){

                             cout << "Room number: " << this->room_no << endl;

                             cout << "area: " << this->area << endl;

                             cout << "type: " << this->type << endl;

                             cout << "price: " << this->price << endl;

}

 

Room* Room::search_room(unsigned room_no){

                             if (this->room_no == room_no){

                                                          return this;

                             }

                             else{

                                                          return NULL;

                             }

}

 

// FOR CUSTOMERS

Customer::Customer(){}

Customer::~Customer(){}

 

Customer::Customer(char *name, char *address, unsigned room_no, char *arrival, unsigned stay_length){

                             strcpy(this->name, name);

                             strcpy(this->address, address);

                             strcpy(this->arrival, arrival);

                             this->room_no = room_no;

                             this->stay_length = stay_length;

}

void Customer::print_info(){

                             cout << "Customer's name: " << this->name << endl;

                             cout << "address: " << this->address << endl;

                             cout << "arrival: " << this->arrival << endl;

                             cout << "stay lenght: " << this->stay_length << " days" << endl;

                             cout << "room number: " << this->room_no << endl;

}

 

Customer* Customer::search_customer(unsigned room_no){

                             if (this->room_no == room_no){

                                                          return this;

                             }

                             else{

                                                          return NULL;

                             }

}

 

void check_customer(Customer **customers, unsigned tempNo, int size){

 
                             Customer *tempC = NULL;

 

                             for (int i = 0; i<size; i++){

                                                          if ((tempC = customers[i]->search_customer(tempNo)) != NULL){

                                                                                       tempC->print_info();

                                                          }

                             }

                             delete tempC;

}

 

 

 

unsigned Customer::get_room_number(){

                             return this->room_no;

}

 

 

void Customer::get_roomInfo(){

 

}

 

void get_total(){

 

}

 

Room* enlarge_roomArray(Room *room, int size) {

 

                             Room *temp;

 

                             try {

                                                          temp = new Room[size];

                             }

                             catch (bad_alloc &xa) {

                                                          cout << "\nAllocation failure\n";

                             }

                             for (int j = 0; j<size - 1; j++)

                                                          temp[j] = room[j];

 

                             return temp;

}

 

Customer** enlarge_customerArray(Customer **customers, int size) {

 

                             if(size==1)

                                                          return new Customer*[size];

 

                             Customer **temp=customers;

 

                             try {

                                                          customers = new Customer*[size];

                             }

                             catch (bad_alloc &xa) {

                                                          cout << "\nAllocation failure\n";

                             }

                             for (int j = 0; j<size - 1; j++)

                                                          temp[j] = customers[j];

 

                             return temp;

}

 

Customer** reduce_customerArray(Customer **customers, int *size, unsigned room_no) {

 

                             int index = -1;

 

                             for (int i = 0; i<*size; i++){

                                                          if (customers[i]->search_customer(room_no) != NULL){

                                                                                       index = i;

                                                                                       break;

                                                          }

                             }

 

                             cout << "index=" << index << endl;

 

                             if (index == -1)

                                                          return NULL;

 

                             Customer **temp = customers;

 

                             (*size)--;

                             try{

                                                          customers = new Customer*[*size];

                             }

                             catch (bad_alloc &xa) {

                                                          cout << "\nAllocation failure\n";

                             }

 

                             int k = 0;

                             for (int j = 0; j<(*size + 1); j++) {

                                                          if (j != index)

                                                                                       customers[k++] = temp[j];

 

                             }

 

                             return customers;

}

 

Room* reduce_roomArray(Room *room, int *size, unsigned room_no){

 

                             int index = -1;

 

                             for (int i = 0; i<*size; i++){

                                                          if (room[i].search_room(room_no) != NULL){

                                                                                       index = i;

                                                                                       break;

                                                          }

                             }

 

                             cout << "index=" << index << endl;

 

                             if (index == -1)

                                                          return NULL;

 

                             Room *temp = room;

 

                             (*size)--;

                             try{

                                                          room = new Room[*size];

                             }

                             catch (bad_alloc &xa) {

                                                          cout << "\nAllocation failure\n";

                             }

 

                             int k = 0;

                             for (int j = 0; j<(*size + 1); j++) {

                                                          if (j != index)

                                                                                       room[k++] = temp[j];

 

                             }

 

                             return room;

}

 

void init_customer(Customer **customer, Room *room, int index) {

 

                             char name[NLEN];

                             char address[ALEN];

                             char arrival[DLEN];

                             unsigned room_n;

                             unsigned stay;

                             int type, i = 1;

 

                             cout << "Name: ";

                             cin >> name;

                             cout << "Address: ";

                             cin >> address;

                             cout << "Arrival date (DD-MM-YY): ";

                             cin >> arrival;

                             cout << "Room number: ";

                             cin >> room_n;

                             cout << "Days of stay: ";

                             cin >> stay;

 

                             do{

                                                          cout << "What type of room? Single(1), Double(2) or suite(3) : ";

                                                          cin >> type;

                                                          //cout<<"\n";

                                                          //cin.get();

 

                                                          switch (type){

                                                          case(1) :

                                                                                       room[index] = Room(room_n, 15.5, "Single", 95.49);

                                                                                       i = 0;

                                                                                       break;

                                                          case(2) :

 

                                                                                       room[index] = Room(room_n, 25.5, "Double", 155.49);

                                                                                       i = 0;

                                                                                       break;

                                                          case(3) :

 

                                                                                       room[index] = Room(room_n, 45.5, "Suite", 195.49);

 

 

                                                                                       i = 0;

                                                                                       break;

                                                          default:

                                                                                       cout << "Not a valid choice, input a valid room type";

                                                          }

                                                          cout << "\n";

                                                          cin.get();

                             } while (i != 0);

 

                             customer[index] = new Customer(name, address, room_n, arrival, stay);

 

 

}

 

 

void checkRoom(Room *room, unsigned tempNo, int size){

 

                             Room *tempR = NULL;

 

                             for (int i = 0; i<size; i++){

                                                          if ((tempR = room[i].search_room(tempNo)) != NULL){

                                                                                       tempR->print_info();

                                                          }

                             }

                             delete tempR;

}

 

 

int main(){

                             int size = 0;

                             Room *room = NULL;

                             Customer **customers = NULL;

                             Hotel *hotel;

                             static char hName[NLEN] = "MY HOTEL";

                             static char hAddress[ALEN] = "Alagabardina 72";

                             static unsigned hStars = 4;

                             static unsigned hRooms = 50;

                             char selection = 0x00;

 

 

                             hotel = new Hotel(hName, hAddress, hStars, hRooms);

 

                             while (true){

                                                          cout << "\nMENU: " << endl;

                                                          cout << "_________________________________" << endl;

                                                          cout << "H: Print Hotel information" << endl;

                                                          cout << "A: add new customer information" << endl;

                                                          cout << "D: delete customer's information" << endl;

                                                          cout << "M: print the list of booked rooms" << endl;

                                                          cout << "N: print the list of customers" << endl;

                                                          cout << "R: search based on room" << endl;

                                                          cout << "S: search based on customer" << endl;

                                                          cout << "Q: quit" << endl;

                                                          cout << "__________________________________" << endl;

                                                          cout << "Enter your selection: ";

 

                                                          cin.get(selection);

                                                          /*Customer **temp = NULL;

                                                          unsigned room_n = 0;*/

                                                          switch (tolower(selection)){

                                                          case 'a'://"A: add new customer information"

                                                                                       customers = enlarge_customerArray(customers, size + 1);

                                                                                       room = enlarge_roomArray(room, size + 1);

                                                                                       init_customer(customers, room, size);

 

 

                                                                                       cout << "---------------" << endl;

                                                                                       customers[size]->print_info();

                                                                                       room[size].print_info();

 

 

                                                                                       size++;

                                                                                       break;

                                                          case 'd'://"D: delete customer's information"

                                                                                       unsigned room_no;

                                                                                       cout << "Input Customer's room number: ";

                                                                                       cin >> room_no;

                                                                                       cin.get();

                                                                                       customers = reduce_customerArray(customers, &size, room_no);

                                                                                       room = reduce_roomArray(room, &size, room_no);

                                                                                       break;

                                                          case 'r'://"R: search based on room"

                                                                                       unsigned tempNo;

                                                                                       cout << "Input desired room number: ";

                                                                                       cin >> tempNo;

                                                                                       checkRoom(room, tempNo, size);

                                                                                       break;

                                                          case 'm'://"M: print the list of booked rooms"

                                                                                       for (int i = 0; i<(size); i++){

                                                                                                                    room[i].print_info();

                                                                                       }

                                                                                       break;

                                                          case 'n'://"N: print the list of customers"

                                                                                       for (int i = 0; i<(size); i++){

                                                                                                                    customers[i]->print_info();

                                                                                       }

                                                                                       break;

                                                          case 's'://"S: search customer based on customer's room"

                                                                                       cout << "Input Customer's room number: ";

                                                                                       cin >> room_no;

 

                                                                                       check_customer(customers, room_no, size);

 

                                                                                       //cout<<"room_no="<<room_no<<endl;

 

                                                                                       /*for(int i=0; i<size; i++){

                                                                                       //if((temp = customer[i].search_customer(room_n)) != NULL){

                                                                                       if(customer[i].search_customer(room_n)){

                                                                                       cout<<"Search found a customer: \n";

                                                                                       customer[i].print_info();

                                                                                       }

                                                                                       }*/

                                                                                       break;

                                                          case 'q':// Quit

                                                                                       cout << "Thanks, see u next summer...";

                                                                                       delete hotel;

                                                                                       delete[] room;

                                                                                       delete[] customers;

                                                                                       return 0;

                                                                                       break;

                                                          case 'h':// Hotel info

                                                                                       hotel->print_info();

                                                                                       break;

                                                          default:

                                                                                       cout << "Input a right value" << endl;

                                                                                       break;

                                                          }

                                                          cin.get();

                             }

}

